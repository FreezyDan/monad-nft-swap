name: CI & Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install
        run: |
          npm ci || npm install

      - name: Typecheck (non-blocking)
        run: |
          npx tsc --noEmit || true

      - name: Build
        run: |
          npm run build

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Env (Preview)
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel Build (prebuilt)
        run: vercel build --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel Deploy (Preview)
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)
          echo "preview_url=$URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Comment Preview URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.preview_url }}';
            if (!url) return;
            const body = `ðŸš€ **Preview Deployment**: ${url}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
